Berlatih SQL dengan membuat Query

1. membuat database
CREATE DATABASE Bookwormies;

2. Membuat table di dalam database
a. tabel user: CREATE TABLE users( id int(8) PRIMARY KEY AUTO_INCREMENT, name varchar(225) NOT null, email varchar(225) NOT null, password varchar(225) NOT null );

b. tabel category: CREATE TABLE genre( id int(8) PRIMARY KEY AUTO_INCREMENT, name varchar(225) NOT null );

c. tabel items (id, name, description, price, stock, category_id): CREATE TABLE items( id int(8) PRIMARY KEY AUTO_INCREMENT, name varchar(225) NOT null, description varchar(225) NOT null, price int(8) NOT null, stock int(8) NOT null, category_id int(8) NOT null, FOREIGN KEY(category_id) REFERENCES category(id) );

3. Memasukkan data ke dalam table database
a. users: INSERT INTO users(name, email, password) VALUES ("John Dawn", "JohnDawn@gmail.com", "Dawnjohn"), ("Michel Pevensie", "Michel25@gmail.com", "PevensieM");

b. genre: INSERT INTO genre(name) VALUES ("romance"),("fantasy"),("self-improvement"),("biography"),("crime");

c. items: INSERT INTO items(name, description, price, stock, category_id) VALUES ("ABC Murder", "A work of detective fiction by Agatha Christie", 50000, 10, 10), ("Filosofi Teras", "Implementing stoic philosophy", 93000, 5, 8), ("Pride and Prejudice", "A classic love story", 80000, 6, 6), ("Percy Jackson the Series", "A Greek Demigod boy", 270000, 3, 7);

4. Mengambil data 
a. data user tanpa password: SELECT id, name, email from users;

b. data dengan harga di atas 90000: SELECT * FROM items WHERE price >90000;

5. menampilkan data items join dengan genre: SELECT items.name, items.description, items.description, items.price, items.stock, items.category_id, genre.name FROM items INNER JOIN genre ON items.category_id = genre.id;

6. Memperbarui data stock: UPDATE items SET stock=2 WHERE id=2;
 
